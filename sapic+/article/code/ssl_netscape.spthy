/*
*Protocol:    SSL Netscape implementation
*            
* A->B: {KAB}KB
* B->A: {NB}KAB
* A->B: {CA,{NB}sigKA}KAB
*/

theory SSL
begin


builtins:  signing, symmetric-encryption, asymmetric-encryption

let P()=        
  new skA;
  event HonestA(pk(skA));
  out(pk(skA));
  !( in(pkB);
    new skAB;
    event KEYSYM_ENC_OUT(aenc(skAB,pkB));
    out(aenc( skAB ,pkB));
    in(cypher);
    let mess = sdec(cypher,skAB) in
      let xNb = mess in
        event NONCE_IN(xNb,senc(xNb,skAB));
        let sig=sign(xNb,skA)in
          event CERT_NONCESIGN_OUT(senc(<pk(skA),sig>,skAB));
            out(senc(<pk(skA),sig>,skAB));
            event SessionA(xNb,skAB,pk(skA),pkB)
  )// strange use of the parenthesis also present in the example
   // NSL ... is it correct?

let Q() =
     new skB; 
      event HonestB(pk(skB));
      out(pk(skB));
      in(cypher1);
	    let mess1 = adec(cypher1,skB) in
        let xskAB = mess1 in
        event KEYSYM_ENC_IN(xskAB,senc(xskAB,pk(skB)));
	      new Nb;
        event NONCE_OUT(senc(Nb,xskAB));
        out(senc(Nb,xskAB));
	      in(cypher2);
	      let mess2 = sdec(cypher2,xskAB) in
	        let <pkA,xsig> = mess2 in
          event CERT_NONCESIGN_IN(xsig,senc(<pkA,xsig>,xskAB));
          if verify(xsig,Nb,pkA)=true then (
            event SessionB(Nb,xskAB,pkA,pk(skB))
          )
            
process:
! (P)
||
! (Q)

//the sanity check evaluates only the existence
//of a path, but there is no guarantee that the one found is correct.

/* 
REMARK
1. The trace is the one with the attacker
2. The automatic translation in proverif produces a different queries
 */

lemma sanity1:  
  exists-trace
  "Ex ni sk pka pkb #t1 #t2 . 
  (SessionA(ni,sk,pka,pkb)@t1 
  & SessionB(ni,sk,pka,pkb)@t2)"


//The secrecy property requires that both the participant are
//honest and, at some point in time, the attacker knows the 
//symmetric key that is established for the session
lemma secret :
"not( Ex ni sk pk1 pk2 #t1 #t2 #t3 #t4. 
  (SessionB(ni,sk,pk1,pk2) @ t4 
	& KU(sk) @ t3
	& HonestA(pk1) @ t2
	& HonestB(pk2) @ t1 ))"

end
