theory NAXOS

begin

builtins: hashing, diffie-hellman

let P()=        
  new skA;
  let A =exp('g',skA) in
	  event HonestA(A);
	  out(A);
	  in(pkB);
	  new eskA;
	  event GENERATE_EPHERMERAL_I(eskA);
	  let hashA = h(eskA,skA) in
	  	let mess1=exp('g',hashA) in
			event MESS1_OUT(mess1);
			out(mess1);
	  		in(y);
			event SessionA(exp(y,skA),exp(pkB,hashA),exp(y,hashA),A,pkB)
		
  		
  
  
let Q() =
	in(pkA);
	event HonestPubKeyA(pkA);
	new skB;
	let B =exp('g',skB) in	
		event HonestB(B);
		out(B);
		in(x);
		event MESS1_IN(x);
		new eskB;
		event GENERATE_EPHERMERAL_B(eskB);
		let hashB = h(eskB,skB) in
			let mess2=exp('g',hashB) in
				event MESS2_OUT(mess2);
				out(mess2);
				event SessionB(exp(pkA,hashB),exp(x,skB),exp(x,hashB),pkA,B)
		
		  
		  
		  
process:
(
!(P())
|
!(Q())
)



lemma sanity1:  
  exists-trace
  "Ex el1 el2 el3 pka pkb #t1 #t2 #t3 #t4 #t5. 
  (HonestB(pkb) @t1
  & HonestA(pka) @t2
  & HonestPubKeyA(pka) @t3
  & SessionA(el1,el2,el3,pka,pkb)@t4 
  & SessionB(el1,el2,el3,pka,pkb)@t5)"
  
  
end
